

\documentclass[12pt,a4paper]{article}
\usepackage{amsmath}
\usepackage{enumerate}
\usepackage[cm]{fullpage}

\begin{document}
\setlength\parindent{0cm}
%\setlength{\oddsidemargin}{0.25cm}
%\setlength{\evensidemargin}{0.25cm}
\title{\Large{\textbf{Introduction to \texttt{R}}}\\
\textit{Session 2 exercises}}
\author{Statistical Consulting Center}
\date{1 March, 2017}
\maketitle
 

\section{Write your own function}
\label{sec:func}
<<echo = FALSE>>=
options(continue = " ")
opts_chunk$set(comment=NA)
sports.df <- read.csv("../../Data/sports.csv")
@

\begin{enumerate}[(i)]
  \item\label{itm:sefunc} In Session 2 you were shown a simple function to calculate the standard error of the mean (SEM), i.e.
%\clearpage\newpage  
  \begin{verbatim}
  mystder <- function(x){
       mysd <- sd(x, na.rm = TRUE)
       n <- length(x)
       mysd/sqrt(n)
  }
  \end{verbatim}
 Type the above code into your \texttt{R} script and submit it
  to the \texttt{R} console. 
  \item \label{itm:sfunc} Modify the function in
    \ref{sec:func}(\ref{itm:sefunc})  
    so that the output will have only 2 decimal places.
<<>>=
mystder <- function(x){
       mysd <- sd(x, na.rm = TRUE)
       n <- length(x)
       round(mysd/sqrt(n), 2)
}
@


  \item Calculate the SEM of \texttt{age} using the
    function you created in \ref{sec:func}(\ref{itm:sfunc}).
<<>>=
mystder(sports.df$age)
@


\end{enumerate}


\section{Installing an \texttt{R} package}
\label{sec:pack}
\texttt{R} packages are collections of user-defined functions. The function
\texttt{std.error}, for example, is contained in the \texttt{plotrix} package.
\begin{enumerate}[(i)]
  \item Let's look at what happens when we try to use a function
    before actually installing on our computer the package in which it is
    contained. E.g. Calculate the SEM of age using
    \texttt{std.error}.  
<<>>=
std.error(sports.df$age)
@
\item Install the package \texttt{plotrix} while in your \texttt{R}
  session by following the instructions below: 
  \begin{enumerate}
  \item Select \texttt{Packages} from the bottom right panel of your
    Rstudio interface.
  \item Click on the \texttt{Install Packages} icon just below \texttt{Packages}.
  \item Type \texttt{plotrix} in the blank space provided below
    ``\texttt{Packages (separate multiple with space or comma):}''
  \item Click on \texttt{No} if you are asked you to restart \texttt{R}
  \item Submit the code \texttt{library(plotrix)} to the \texttt{R} console
    to make the functions contained in \texttt{plotrix} available in the current \texttt{R} session.
<<warning = F>>=
library(plotrix)
@
  \end{enumerate}
\item Now, use \texttt{std.error} to calculate the standard error of
  the mean age. 
<<>>=
std.error(sports.df$age)
@
\item Try writing your own code to calculate the standard error of the
  mean age. Hint: This only requires one line of code. Use online resources
if you cannot remember how the SEM is calculated.
<<>>=
with(sports.df, sd(age,na.rm = TRUE)/sqrt(length(age)))
@

\end{enumerate}
 
\section{Subsetting datasets}
\label{sec:sub}
\begin{enumerate}[(i)]
\item \label{itm:1way} Produce a one-way frequency table for variable \texttt{q1a}.
<<>>=
table(sports.df$q1a)
@
\item \label{itm:na} Which participants chose ``Can't
  choose'' for this question?
<<>>=
which(sports.df$q1a == "Can?t choose")
@
\item Now reproduce the frequency table in
  \ref{sec:sub}(\ref{itm:1way}), excluding the participants you identified in
  \ref{sec:sub}(\ref{itm:na}).
<<>>=
excluded <- which(sports.df$q1a == "Can?t choose")
with(sports.df[-excluded, ], table(q1a))
@
\item Calculate the mean age of male participants.
<<>>=
with(sports.df, mean(age[gender == "Male"], na.rm = TRUE))
@
\item Calculate the mean age of male participants who earn more than
  \$100000 a year.
<<>>=
with(sports.df, mean(age[gender == "Male" &  
                         income == "> 100 000$"], na.rm = TRUE))
@
\item Calculate the mean age of European male participants who earn more than
  \$100000 a year.
<<>>=
with(sports.df, mean(age[gender == "Male" &  income == "> 100 000$" & 
                         ethnicity == "Europe,White/European"], na.rm = TRUE))
@
\end{enumerate}
\section{Challenge}
\label{sec:cha}

Modify the function given in {\bf\ref{sec:func}}, so that the function will
return a 95\% confidence interval (with 2 decimal places). Hint: A 95\% confidence interval of a variable \texttt{x} is given by the mean of \texttt{x} $\pm$ 1.96 $\times$ SEM of \texttt{x}. You might find the \texttt{paste()}
function useful.

<<>>=
mystder <- function(x){
       mymean <- mean(x, na.rm = TRUE)
       mysd <- sd(x, na.rm = TRUE)
       n <- length(x)
       mystder = mysd/sqrt(n)
       upperCI = round(mymean + 1.96*mystder, 2)
       lowerCI = round(mymean - 1.96*mystder, 2)
       paste("(", lowerCI, " , ", upperCI, ")", sep = "")
}
mystder(sports.df$age)
@

\end{document}
