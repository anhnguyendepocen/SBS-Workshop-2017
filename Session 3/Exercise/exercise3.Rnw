

\documentclass[12pt,a4paper]{article}
\usepackage{amsmath}
\usepackage{enumerate}
\usepackage[cm]{fullpage}

\begin{document}
\setlength\parindent{0cm}
%\setlength{\oddsidemargin}{0.25cm}
%\setlength{\evensidemargin}{0.25cm}
\title{\Large{\textbf{Introduction to \texttt{R}}}\\
\textit{Session 3 exercises}}
\author{Statistical Consulting Centre}
\date{1 March, 2017}
\maketitle
 

\section{Missing values}
\label{sec:missing}
<<echo = FALSE>>=\item 
options(continue = " ")
opts_chunk$set(comment=NA)
sports.df <- read.csv("../../Data/sports.csv")
@
\begin{enumerate}[(i)]
\item \label{itm:q1} In question 3(ii) of exercise 2 you identified the ``Can't choose'' cases in \texttt{q1a}. Now, replace these cases by
  \texttt{NA}.
\item Repeat \ref{sec:missing}(\ref{itm:q1}) for \texttt{q1b} -- \texttt{q1e}, so that all cases of ``Can't choose'' are replaced by \texttt{NA}.
\item \label{it:1way-ethnicity} Produce a one-way frequency table of \texttt{ethnicity}.
\item Repeat {\bf \ref{sec:missing}}(\ref{it:1way-ethnicity}) after replacing all cases of ``NA, dont know'' with \texttt{NA}.
\item There are only two possible values for \texttt{partner}:
  \texttt{Yes} and \texttt{No}. Replace any values which are \underline{not} \texttt{Yes} or \texttt{No} with \texttt{NA}.

\end{enumerate}

\section{Factor}
\label{sec:fac}
\begin{enumerate}[(i)] 
\item Produce a two-way frequency table of \texttt{q1a} versus \texttt{gender}.
\item Table \ref{tab:level} shows the appropriate ordering of the levels of the values in \texttt{q1a} -- \texttt{q1e}. \\
\begin{table}[!h]
  \centering
  \caption{The right levels for \texttt{q1a} to \texttt{q1e}}
  \begin{tabular}[h]{lr}
    q1a & Factor(q1a)\\
\hline
Daily & 1\\
Several times a week & 2\\
Several times a month & 3\\
Several times a year or less often & 4
  \end{tabular}
  \label{tab:level}
\end{table} \\
Convert \texttt{q1a} -- \texttt{q1e} into factors with their levels ordered as shown in Table \ref{tab:level}. Then generate two-way frequency tables between \texttt{q1a} to
\texttt{q1e}, respectively, versus \texttt{gender} to check that you've appropriately ordered these factors' levels.

\item \label{itm:group} Create a new variable which categorises all
  participants into one of three age groups: ``Under 40'', ``41 to 60'' and ``Over 61''.

\item Convert the variable created in {\bf \ref{sec:fac}}(\ref{itm:group})
  into factors with appropriate levels.

\item Add the factor into \texttt{sports.df} and name it \texttt{age.group}

\end{enumerate}
%\newpage
\section{Challenge}
\label{sec:cha}
We mentioned in Exercise 2 that the function \texttt{mystder} calculates
the standard error of the mean (SEM), i.e. 
<<>>=
mystder <- function(x){
       mysd <- sd(x, na.rm = T)
       n <- length(x)
       mysd/sqrt(n)
}
@
This function only calculates the standard error correctly if the input does NOT contain missing values. This is because the \texttt{length()} function counts the number of elements in the variable, including missing values. For example:
<<>>=
test <- c(1, 2, 3, 4, NA)
length(test)
@
So, \texttt{length(test)} returns \Sexpr{length(test)} instead of \Sexpr{sum((!is.na(test)))}. Suppose you repeat an experiment 5 times, resulting in one missing value; your real/valid sample size is 4. Thus, when you calclate your standard error, use $n = 4$ instead of 5. For example,
<<>>=
mysd <- sd(test, na.rm = T)
mysd
n <- 4
n
mysd/sqrt(n)
@
The real SEM for \texttt{test} should be \Sexpr{mysd/sqrt(n)}; however, if we use \texttt{mystder()} to calculate it we get:
<<>>=
mystder(test)
@

Thus, calculating the sample size using \texttt{length()} will lead to an incorrect solution when there are missing values in the data. 
\begin{enumerate}[(i)] 
\item Now that you know what is wrong with \texttt{mystder()}, modify it so it gives the correct SEM even if the input contains missing values.  
 
\item Apply your modified \texttt{mystder} function to \texttt{test} to see whether it returns the correct answer, i.e. \Sexpr{mysd/sqrt(n)}.
 
\item Create \texttt{test2}, as shown below, and test your function on this new variable.
<<echo = F>>=
#There are many many ways of doing this. Here is just one example:
mystder <- function(x){
       mysd <- sd(x, na.rm = T)
       n <- sum(!is.na(x))
       mysd/sqrt(n)
}
@
<<>>=
test2 <- c(1:100, rep(NA, 30))
@
The correct value for the SEM should be \Sexpr{sd(test2, na.rm = T)/sqrt(100)}.

\end{enumerate}
\end{document}
